def VERSION_NAME = "0.2.1"

buildscript {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

apply plugin: 'kotlin'
apply plugin: 'java-gradle-plugin'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'

ext {
    pom = [
            publishedGroupId  : 'com.shopify.syrup',
            artifact          : 'syrup-gradle',
            libraryName       : 'syrup-gradle',
            libraryDescription: 'A Gradle plugin for generating GraphQL models with Syrup.',
            siteUrl           : 'https://shopify.github.io/syrup',
            gitUrl            : 'https://github.com/Shopify/syrup-gradle.git',
            licenseName       : 'The MIT License',
            licenseUrl        : 'https://opensource.org/licenses/MIT'
    ]
}

group pom.publishedGroupId
archivesBaseName = pom.artifact
version VERSION_NAME

repositories {
    google()
    jcenter()
}

dependencies {
    implementation "org.yaml:snakeyaml:1.24"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.61"
}

gradlePlugin {
    plugins {
        syrupPlugin {
            id = 'com.shopify.syrup'
            implementationClass = 'com.shopify.syrup.SyrupPlugin'
        }
    }
}

shadowJar {
    archiveClassifier = null
    minimize()
}

task publishBinary(type: Copy) {
    dependsOn shadowJar
    from('./build/libs') {
        include "*.jar"
    }
    into 'lib'
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives shadowJar, javadocJar, sourcesJar
}

signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: System.getenv("OSSRH_USERNAME"), password: System.getenv("OSSRH_PASSWORD"))
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: System.getenv("OSSRH_USERNAME"), password: System.getenv("OSSRH_PASSWORD"))
            }

            pom {
                project {
                    groupId project.ext.pom.publishedGroupId
                    artifactId project.ext.pom.artifact

                    name project.ext.pom.libraryName
                    description project.ext.pom.libraryDescription
                    url project.ext.pom.siteUrl

                    developers {
                        developer {
                            name 'Shopify Inc.'
                        }
                    }

                    licenses {
                        license {
                        name project.ext.pom.licenseName
                        url project.ext.pom.licenseUrl
                        }
                    }

                    scm {
                        connection = project.ext.pom.gitUrl
                        developerConnection = project.ext.pom.gitUrl
                        url = project.ext.pom.siteUrl
                    }
                }
            }
        }
    }
}
